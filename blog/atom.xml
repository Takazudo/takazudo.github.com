<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
	<title>Takazudolog</title>
	<link href="http://takazudo.github.com/blog"/>
	<link type="application/atom+xml" rel="self" href="http://takazudo.github.com/blog/atom.xml"/>
  <updated>2013-02-08T06:06:31+09:00</updated>
  <id>http://takazudo.github.com/blog</id>
  <author>
		<name>"Takazudo" Takeshi Takatsudo</name>
		<email>takazudo@gmail.com</email>
  </author>

  
  <entry>
		<id>http://takazudo.github.com/blog/entry/2013-02-06-videoaudio.html</id>
    <link type="text/html" rel="alternate" href="http://takazudo.github.com/blog/entry/2013-02-06-videoaudio.html"/>
    <title>地獄のvideo／audio要素</title>
    <updated>2013-02-06T00:00:00+09:00</updated>
    <author>
			<name>"Takazudo" Takeshi Takatsudo</name>
      <uri>http://takazudo.github.com/blog</uri>
    </author>
    <content type="html">&lt;p&gt;video／audioにハマりまくったメモ。作ってたのは、Flashでやってたような、複数の動画ファイルを、途中の選択肢によって色々変えながら見せるというようなインタラクティブムービーみたいなの。なので、ハードにvideoを使いまくるという意味で、普通に一本動画を見せるという用途よりももっと色々する必要があったわけだけれども、そうでない場合でも、videoが色々厄介であるということは知っておく必要があると思う。&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;とりあえず、videoやaudioを使いたい人は、以下の2ページを熟読せよ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://thinkit.co.jp/story/2013/01/25/3935'&gt;プラグインは要らない！音声／動画対応したHTML5 - audio／video要素 | Think IT&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://diveintohtml5.info/video.html'&gt;Video - Dive Into HTML5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;videoのイベントは &lt;a href='http://www.w3.org/2010/05/video/mediaevents.html'&gt;HTML5 Video&lt;/a&gt; を眺めてるとなんとなく分かる。&lt;/p&gt;

&lt;p&gt;audioライブラリ試してうまくいったやつはこれ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://www.createjs.com/#!/SoundJS'&gt;SoundJS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;videoのライブラリ、使ってないけど良さげなのはこれ。自分の場合、こまいことしたかったので、これじゃなくてもろもろ自分で書いた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://mediaelementjs.com/'&gt;MediaElement.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以下メモ。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: mp4やwebmが再生されない&lt;/p&gt;

&lt;p&gt;AddType video/ogg .ogv&lt;br /&gt;AddType video/mp4 .mp4&lt;br /&gt;AddType video/webm .webm&lt;br /&gt;AddType audio/mpeg .mp3&lt;br /&gt;AddType audio/ogg .oga .ogg&lt;/p&gt;

&lt;p&gt;をapacheに設定。設定しないとtextとかで返しちゃうから。（超重要）&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: &lt;code&gt;preload=&amp;quot;auto&amp;quot;&lt;/code&gt;にして、コントロールバー見ると、途中までしかダウンロードされてないんだけど&lt;/p&gt;

&lt;p&gt;videoは全部をダウンロードしない。それが正常。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: プリロードはできるの？&lt;/p&gt;

&lt;p&gt;たぶん完全にはできない。その代わり、このネットワーク速度なら再生がダウンロードを追い越さないというぐらいまでダウンロードが完了したら、&lt;code&gt;canplaythrough&lt;/code&gt;イベントが発火する。実質これがプリロードで、上記の途中までしかダウンロードされないのもこのため。さっぱりダウンロードさせたくなかったらvideo要素にprealod=&amp;#8221;none&amp;#8221;を指定しておき、&lt;code&gt;element.load()&lt;/code&gt;で読み込み開始。画像のプリロードみたいな風に単純には行かない。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: 時間をすごい先にしたら全部プリロードできちゃったりするんじゃないの？&lt;/p&gt;

&lt;p&gt;できない。videoのレスポンスはPartial Contentで、よくわからんけどXHRみたいなもので、断片的に送られて来るらしい。なので、先まで時間すっ飛ばしたらその辺からダウンロードが開始される。&lt;/p&gt;

&lt;p&gt;ちなみに、XHRで全部とってきておけばキャッシュするだろとか、とってきてdataURIとしてsrcに指定すれば全部プリロードできるだろとか思ってやってみたらブラウザが落ちたのでそういうアプローチはだめげ&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: &lt;code&gt;canplaythrough&lt;/code&gt;が発火しない&lt;/p&gt;

&lt;p&gt;FirefoxとOperaは&lt;code&gt;element.load()&lt;/code&gt;しても読み込まない風。&lt;code&gt;element.play()&lt;/code&gt; &lt;code&gt;element.muted = true&lt;/code&gt;して、50ms後ぐらいに&lt;code&gt;element.pause()&lt;/code&gt; &lt;code&gt;element.muted = false&lt;/code&gt;すれば読み込みを開始する。ひどい。あと、&lt;code&gt;element.readyState&lt;/code&gt;が4以上になるのも監視したほうがいい。（よくわかってない）&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: &lt;code&gt;element.pause()&lt;/code&gt;とか&lt;code&gt;element.muted = true&lt;/code&gt;とか&lt;code&gt;element.currentTime=0&lt;/code&gt;とか失敗する。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;try&lt;/code&gt;/&lt;code&gt;catch&lt;/code&gt;せよ。これらは失敗する可能性がある。IE9では&lt;code&gt;element.currentTime&lt;/code&gt;をいじれるのは再生した後。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: &lt;code&gt;canplaythrough&lt;/code&gt;って信じられるの？&lt;/p&gt;

&lt;p&gt;なぜか特定のネットワークだとバッファで止まったりしまくったことがあった。また、マシンスペックがへぼいと、回線速度が良好でも処理が追いつかなくて止まる事がある。ブラウザの実装次第。そんなこんなで、重すぎるコンテンツは低スペックPCだと無理になる。そしてマシンスペックを知る方法とかたぶん無い。しかしまぁ、大抵の場合は&lt;code&gt;canplaythrough&lt;/code&gt;を信じてやるしか無いし、概ね問題ない。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: フォーマットって何用意すればいいの？&lt;/p&gt;

&lt;p&gt;video: webmとh264。audio: mp3とogg。Firefox、Opera、Chromeがwebm／ogg、IE9、IE10、iOS、Chromeがh264／mp3。(2013年2月時点）&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: エンコードって何ですればいいの？&lt;/p&gt;

&lt;p&gt;これが楽。&lt;a href='http://www.mirovideoconverter.com/'&gt;Miro Video Converter&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: webmの最後のフレームが静止状態で1秒ぐらい続いちゃうんだけど&lt;/p&gt;

&lt;p&gt;多くのエンコーダーではそのようになってしまう。気になるならこれでエンコードする。&lt;a href='http://www.xmedia-recode.de/'&gt;XMedia Recode&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: video要素をそのままHTMLに書いた方がいいの？オンザフライで作った方がいいの？&lt;/p&gt;

&lt;p&gt;状況によるけど、沢山のvideo要素を扱う場合は、必要な物だけオンザフライで作ったほうが良かった。videoに&lt;code&gt;preload=&amp;quot;none&amp;quot;&lt;/code&gt;を指定していても、IE9, 10ではそれを全部、はじめの部分だけ読みに行き、メモリ不足がどうとか言い出してエラー出しまくって最悪フリーズした。オンザフライで作る場合は、&lt;code&gt;Modernizr.video.webm&lt;/code&gt;、&lt;code&gt;Modernizr.video.h264&lt;/code&gt;で判別して対応するファイルへのパスをvideoのsrcに指定する。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: 読込中にブラウザがフリーズします&lt;/p&gt;

&lt;p&gt;自前でキュー作って順番にロードせよ。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: &lt;code&gt;elememtn.play()&lt;/code&gt;しても0.5秒ぐらい再生が始まらない (IE10)&lt;/p&gt;

&lt;p&gt;マシンスペックによる。低スペックなマシンだと起こる。回避無理そう。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: videoのプレイ進捗が知りたい&lt;/p&gt;

&lt;p&gt;&lt;code&gt;element.currentTime&lt;/code&gt;に現在の再生位置時間が入ってる。&lt;code&gt;timeupdate&lt;/code&gt;イベントがプレイ中に起こり続ける。ただし、&lt;code&gt;timeupdate&lt;/code&gt;は1秒間に1〜4回ぐらいしか発火しない。もっと細かく取りたかったらtimeupdate間でタイマー回して取る。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: &lt;code&gt;ended&lt;/code&gt;イベントが発火しない(IE10)&lt;/p&gt;

&lt;p&gt;低スペックPCで発生する。&lt;code&gt;element.play()&lt;/code&gt;時に&lt;code&gt;new Date&lt;/code&gt;して、タイマー回して、&lt;code&gt;element.duration&lt;/code&gt;分経ったかを合わせてチェックする…&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: Safari5で&lt;code&gt;element.load()&lt;/code&gt;が効かない&lt;/p&gt;

&lt;p&gt;Safari5のvideoの実装は不十分すぎでめちゃくちゃ微妙。&lt;code&gt;element.preload = &amp;#39;auto&amp;#39;&lt;/code&gt;で読み込みを開始させる。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: Safari5でブラウザがフリーズする&lt;/p&gt;

&lt;p&gt;複数のvideo要素を扱う時、Safari5でvideoのロード等の処理負荷が一定以上になると、ブラウザがフリーズする。まずは、video要素自体は&lt;code&gt;preload=&amp;quot;none&amp;quot;&lt;/code&gt;で作っておき、一定の間隔を置いて一つずつ&lt;code&gt;preload=&amp;quot;auto&amp;quot;&lt;/code&gt;にしていくとかして、慎重に扱わないとフリーズする。ひどい。作るものによってはSafari5以下は非サポートとしたほうが良さそう。ちなみに、HTMLにvideo要素を直接書いた方が安定した気がしたかも。Safari6は段違いに優秀。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: IE10が落ちる&lt;/p&gt;

&lt;p&gt;IE10はChromeの次ぐらいに優秀なんだけれども、処理性能はマシンスペック依存。でかすぎるvideoはIE10を落としたり不安定にするんで、控えめにvideo使わないとダメ。低スペックPCでも見れるコンテンツを安全に作りたかったら重いコンテンツはNG。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: 読み込みに失敗するんだけど&lt;/p&gt;

&lt;p&gt;&lt;code&gt;error&lt;/code&gt;イベントをしっかり取ってエラーを出しましょう。あと、同時にいっぱい読むとエラーが起こりやすい。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: 複数タブで同じページを表示すると片方でvideoを読み込まない&lt;/p&gt;

&lt;p&gt;たぶんブラウザが悪いけどなぜかそうなる。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: 連続してSEみたいな短いaudioを鳴らせない&lt;/p&gt;

&lt;p&gt;5個ぐらい作って代わる代わるplayさせるといいんじゃない… 僕はそうしました…&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: Safariで短いaudioが鳴らない&lt;/p&gt;

&lt;p&gt;videoだのaudioだのと言っても、Safariにとってそれは、QuickTimeのAPIを内部的に呼んでいる風。QuickTime自体が短すぎるmp3を鳴らせない。無音部分を後ろに追加せよ…&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: canvasにvideoを取り込みたい&lt;/p&gt;

&lt;p&gt;context.drawImageすればいい&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: &lt;code&gt;muted&lt;/code&gt;属性がきかない&lt;/p&gt;

&lt;p&gt;たぶんブラウザの実装が不十分で効かないのがある。playさせてから&lt;code&gt;element.muted = true&lt;/code&gt;なりなんなりしてやると効いたりする？&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: Safariで&lt;code&gt;display:none&lt;/code&gt;にしたvideoの読み込みが開始されない&lt;/p&gt;

&lt;p&gt;&lt;code&gt;display:block&lt;/code&gt;にしたら読み込んだ気がした確か。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: Operaでやたら重い&lt;/p&gt;

&lt;p&gt;videoを&lt;code&gt;opacity:0&lt;/code&gt;で隠しておくとOperaでやたら重くなる。&lt;code&gt;display:none&lt;/code&gt;の方がいい。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: windows XPでやたら変&lt;/p&gt;

&lt;p&gt;同じバージョンのブラウザであっても、windows XPでは音や映像が飛びまくったり止まったりなどして、何か色々おかしい。Vista以上だと大丈夫。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: ちょっと前のブラウザで何かおかしい&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Modernizr.video&lt;/code&gt;が&lt;code&gt;true&lt;/code&gt;を返したとしても、ブラウザの実装が完璧なわけではない。動かない可能性があるとかなんとか、常に出したほうがいいかも。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: iOSでvideoを&lt;code&gt;visibility:hidden&lt;/code&gt;にしてるけどなんか表示されちゃう&lt;/p&gt;

&lt;p&gt;videoがHTML内にある時点で、ブラウザは何かしら処理を始めちゃうって思ったほうがいい。&lt;code&gt;document.createElement(&amp;#39;video&amp;#39;)&lt;/code&gt;からオンザフライで色々してください&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: ユーザーにvideoやmp3をダウンロードさせたくないんですけど&lt;/p&gt;

&lt;p&gt;諦めろ（よく聞かれる）&lt;br /&gt;もしくはすっごい予算かけてなにかすごいサーバーの仕組みを作る&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: モバイルでvideoやaudioを使いたい&lt;/p&gt;

&lt;p&gt;ただの動画再生ならYouTubeを使いましょう。もしくはかなり工数がかかることを覚悟して望まないとダメかも。iOSはそもそもvideoを再生すると全画面表示なってしまうので、それ以外の用途では無理。audioは最初に紹介したSoundJSがそこそこなんとかしてくれるっぽいけど、これもまた大変そうな感じ。よく聞かれるのが、スマホ向けにも動画を見せたいとか言うやつなんだけれども、その問いに対する自分の答えはだいたい&lt;/p&gt;

&lt;p&gt;YouTube使え&lt;/p&gt;

&lt;p&gt;h264とwebm用意して見れないやつはあきらめたほうがいい&lt;/p&gt;

&lt;p&gt;無限に工数と予算が増えることを許可してくれるならやりますけど動作は保証できないんでほとんどコストに見合わないと思う&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Q: videoを使うのは大変なんでしょうか&lt;/p&gt;

&lt;p&gt;ただの再生ならそこまでではないけども、APIやイベントを使って色々したいのであれば、かなり大変という印象。まだまだこれからっていう感じ。Chromeだけならとても楽しく利用できる…。canvasと組み合わせたりするとかなり夢広がる。2012年2月時点での自分の感想は、Chrome以外全部微妙で不具合がある。&lt;/p&gt;

&lt;p&gt;そんでもって、video非対応なブラウザ、videoが微妙なブラウザに対しても色々メッセージ出したりなんのしないといけないんでそのへんも地味に大変。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;気づいたら追加しまっす&lt;/p&gt;</content>
  </entry>
  
  <entry>
		<id>http://takazudo.github.com/blog/entry/2012-12-10-oocsssass.html</id>
    <link type="text/html" rel="alternate" href="http://takazudo.github.com/blog/entry/2012-12-10-oocsssass.html"/>
    <title>OOCSSとSass</title>
    <updated>2012-12-10T00:00:00+09:00</updated>
    <author>
			<name>"Takazudo" Takeshi Takatsudo</name>
      <uri>http://takazudo.github.com/blog</uri>
    </author>
    <content type="html">&lt;p&gt;&lt;a href='http://www.adventar.org/calendars/1'&gt;CSS Preprocessor Advent Calendar 2012&lt;/a&gt;の10日目、&lt;a href='http://twitter.com/Takazudo'&gt;@Takazudo&lt;/a&gt;です。&lt;/p&gt;

&lt;p&gt;僕はSassが好きです。なぜならSassには&lt;code&gt;extend&lt;/code&gt;があるからです。その理由を、社内勉強会で発表した、以下のスライドで話したことを補足しつつ、書きます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class='apply-nolazy' href='/presentation-oocss-sass/#/'&gt;OOCSS + Sass&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;!--more--&gt;
&lt;h2 id='oocss'&gt;OOCSSってなんぞ&lt;/h2&gt;

&lt;p&gt;まず、Sassの&lt;code&gt;extend&lt;/code&gt;が素敵な点を紹介する前に、OOCSSについて簡単に紹介します。&lt;/p&gt;

&lt;p&gt;OOCSSというのは、Nicole Sullivanという人が言い出した考え方です。そのプレゼン資料やビデオなどは、本人が発表したものが、slideshare等にアップされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://oocss.org/'&gt;Object-oriented CSS&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://fronteers.nl/congres/2009/sessions/object-oriented-css'&gt;Object Oriented CSS by Nicole Sullivan · Fronteers&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://www.slideshare.net/stubbornella/the-cascade-grids-headings-and-selectors-from-an-oocss-perspective-ajax-experience-2009'&gt;The Cascade, Grids, Headings, and Selectors from an OOCSS Perspecti&amp;#8230;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;OOCSSのサイトの例えば&lt;a href='http://oocss.org/grids_docs.html'&gt;このページ&lt;/a&gt;を見ると、divのclass属性に&lt;code&gt;size1of3&lt;/code&gt;だと&lt;code&gt;size2of3&lt;/code&gt;だとかいうのが使われているのがわかります。さっとだけOOCSSのことを見た人の中には、「あーOOCSSって、そういう便利系クラスをいっぱい付けてやるスタイルのことなのね。知ってるわーそれ２年前からやってわー知ってたわー」という人が、なぜか多いのですが、OOCSSというのはそういうことじゃーないんです。&lt;/p&gt;

&lt;p&gt;OOCSSとは、ページの部品を「モジュール」という単位で分けて考えることで、サイトのメンテナンス性とパフォーマンスを上げる考え方の一つです。そして、複雑な部品については、このモジュールについて、他のプログラミング言語における、クラス（HTMLのclass属性とは異なる、プログラムにおける雛形の意）の継承の考え方を利用し、効率的に拡張していく&amp;#8230;というのが、OOCSSのキモとなる部分であると、僕は捉えています。その実現の方法として、class属性に複数のクラスを当てる手法をとる&amp;#8230; ということになります。&lt;/p&gt;

&lt;p&gt;それを、簡単なモジュールを作りつつ、見ていくことにします。&lt;/p&gt;

&lt;h2 id='id307'&gt;黒か白か&lt;/h2&gt;

&lt;p&gt;まず、TwitterとFacebookのボタンを作ってみます。&lt;br /&gt;Twitterボタンは赤、Facebookボタンは青&amp;#8230;としましょう。そんなコードを、おれならこう書くぜ！ドーーン&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='http://cdn.dropmark.com/2008/381bdd5da7799866ab3d7557e1ba8e450b4e55b2/Picture%2010.png' /&gt;&lt;/p&gt;

&lt;p&gt;m9(^Д^)ﾌﾟｷﾞｬｰ と言われてしまいそうですが、これは、よく非難されるような、典型的なダメなクラス名の付け方&amp;#8230;あの時のオレはどうかしちまってたんだ&amp;#8230; とも言えるようなクラス名です。これは、柔軟性はありますよね。うん&amp;#8230; でもCSSって、一体何なんだろうね&amp;#8230;&lt;/p&gt;

&lt;p&gt;ちなみに、このサンプルでは、ただの赤青のボタンですが、これは、同じような見栄えを持つ、めちゃくちゃリッチなボタン&amp;#8230; しかし、その２つの装飾は異なる&amp;#8230;であると、応用をきかせて、想像してください。イマジネーションの側面が重要です。&lt;/p&gt;

&lt;p&gt;そんなダメダメなコードをdisりまくる、セマンティック野郎の書いたコードがこれです。&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='http://cdn.dropmark.com/2008/0f23e9c2eda9bdfe9d0cef44e63badc5abd36594/Picture%204.png' /&gt;&lt;/p&gt;

&lt;p&gt;オーセマンティックデスネー&lt;br /&gt;ではそのCSSを見てみましょう。&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='http://cdn.dropmark.com/2008/ce1c88b8b3b8b89c8a1d3c044922b89f4ac9be56/Picture%2011.png' /&gt;&lt;/p&gt;

&lt;p&gt;ハハハ・・・セマンティック最高だよね・・・&lt;br /&gt;同じCSSをコピペして使うなんてさ・・・&lt;br /&gt;おいおい、でもセマンティックは重要だろ？&lt;br /&gt;クラス名には意味をもたせるべきだろ？&lt;br /&gt;いやいやしかしこのCSSは無いでしょ。&lt;br /&gt;ほかにも似たようなgoogle plusボタンができたらまたあんた同じCSSコピペするつもりでしょ？&lt;br /&gt;じゃあどうすればいいっていうのさ！&lt;/p&gt;

&lt;p&gt;ということになってしまいますよね。&lt;br /&gt;この２つのコードは、言ってみれば、黒か白かという両極端なコードです。柔軟性を追求すれば、前者はまぁそりゃ柔軟であることには違いないですが、それ、CSSの意味ってなんなんですか？ってなりますし、後者はHTMLとしては理想ですが、CSSの中は大変なことになってしまいます。&lt;/p&gt;

&lt;p&gt;あーほんとHTMLとCSSってなんでこう面倒くさいんでしょうね。&lt;/p&gt;

&lt;p&gt;&amp;#8230;こえますか？&amp;#8230;聞こえますか？&amp;#8230;僕はいま、あなたの脳内に直接語りかけています！OOCSSを使うのです！YES！&lt;/p&gt;

&lt;h2 id='oocss'&gt;OOCSSっぽい書き方&lt;/h2&gt;

&lt;p&gt;と、そんなコードを、OOCSSでは以下のように書きます。&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='http://cdn.dropmark.com/2008/c55635236d2e963416aad56e4cd07e6ac5d6f4ca/Picture%201.png' /&gt;&lt;/p&gt;

&lt;p&gt;OOCSSではーベースのモジュールに、スキンを適用する&amp;#8230;というふうに書くのです。複数のクラス名を利用して。&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='http://cdn.dropmark.com/2008/105c2b7dfb373d89e02b3a38093585c519c782cd/Picture%202.png' /&gt;&lt;/p&gt;

&lt;p&gt;ここでのベースのモジュールというのは、クラス、&lt;code&gt;btnbase&lt;/code&gt;が表現するもの。ここには、ボタンの共通スタイルが適用されています。その上で更に具体的なバリエーションは、&lt;code&gt;twitter&lt;/code&gt;、&lt;code&gt;facebook&lt;/code&gt;といったような、スキンとしてのクラスで適用するという形です。&lt;/p&gt;

&lt;p&gt;これが、プログラミング言語における、「クラスの継承」っぽいでしょ？っていう感じでObjected Oriented CSSと名付けられたようです。まぁその呼び方はどうなのよっていう意見もありますが、要するにこういうのがOOCSSの考え方（の一部）です。これなら、CSSに無駄がありませんね。同じようなgoogle plusボタンが現れたとしても、&lt;code&gt;btnbase googleplus&lt;/code&gt;っていうクラスをあててスタイルが適用されるように作ればいいんですから&amp;#8230;！&lt;/p&gt;

&lt;h2 id='id308'&gt;オイオイその冗談みたいなクラス名は何だ&lt;/h2&gt;

&lt;p&gt;でもちょっとまってください。&lt;/p&gt;

&lt;p&gt;「このクラス名のどこらへんがセマンティックっていうんだよ？え？&lt;code&gt;btnbase&lt;/code&gt;だって？ふざけてんのかね。そんなのは&lt;code&gt;blackborder&lt;/code&gt;がちょっとマシになったようなもんじゃないんですか？」&lt;/p&gt;

&lt;p&gt;とセマンティック野郎が言いそうです。そのストリクトで真っ直ぐな精神は買いましょう。しかし、クラスをよりセマンティックにすれば、CSSはどんどん複雑に&amp;#8230;。どうすれば&amp;#8230;！という問に対しては、OOCSSは、「そんへんはある程度妥協して諦めろ」と答えます。OOCSSの考え方を用いれば、この&lt;code&gt;btnbase&lt;/code&gt;のようなクラス名を作り、それをHTMLのclass属性に書くことになります。これはセマンティックなクラス名とは言いがたい&amp;#8230;しかし！これがパフォーマンスとメンテナンス性を考慮した、最適解である&amp;#8230;というのが、OOCSSの考え方です。なので、ただ単に便利なクラス名をポコポコ作って組み合わせれば素敵でしょ？っていうわけじゃないのです。&lt;/p&gt;

&lt;p&gt;それにしたってそんな変なクラスを付けるなんて、中途半端な感じがしませんか？そうかも知れません。しかし、「CSS is too fragile」。CSSはあまりにも壊れやすい。CSSの機能は、はっきり言ってショボイ。プログラミング言語であれば、複雑さに対処する方法は色々と用意されています。しかし、CSSにはそのようなものがないと言ってしまっていいでしょう。とてつもなく長いCSSファイル - 赤の他人が書いたものを、すらすらと解読することができるでしょうか？ それは、やっている人なら分かると思いますが、なかなかにしんどい作業です。&lt;/p&gt;

&lt;p&gt;なんどでも言いたいこと、「CSSはショボイ」。しかしそれゆえに、その壊れやすいCSSを、丁寧に考えて書く必要があるのです。「そんな変なクラス」と呼んだもの、それは、具体的すぎず、なおかつ抽象的過ぎない、ちょうどいい具合の、そのUIを表現するクラス名ということになるでしょうね。&lt;/p&gt;

&lt;h2 id='__'&gt;枠 + モジュール&lt;/h2&gt;

&lt;p&gt;OOCSSは、このようなモジュール＋スキンの考えに加え、枠組みを作って、その中にモジュールを突っ込んで使えるようにしろというような考え方もあります。このアンチパターンが、例えば以下の様なコードです。&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='css'&gt;&lt;span class='nc'&gt;.sidebar&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
  &lt;span class='o'&gt;...&lt;/span&gt;
&lt;span class='p'&gt;}&lt;/span&gt;
  &lt;span class='nc'&gt;.sidebar&lt;/span&gt; &lt;span class='nt'&gt;h1&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
    &lt;span class='o'&gt;...&lt;/span&gt;
  &lt;span class='p'&gt;}&lt;/span&gt;
  &lt;span class='nc'&gt;.sidebar&lt;/span&gt; &lt;span class='nt'&gt;ul&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
    &lt;span class='o'&gt;...&lt;/span&gt;
  &lt;span class='p'&gt;}&lt;/span&gt;
  &lt;span class='nc'&gt;.sidebar&lt;/span&gt; &lt;span class='nc'&gt;.banners&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
    &lt;span class='o'&gt;...&lt;/span&gt;
  &lt;span class='p'&gt;}&lt;/span&gt;
  &lt;span class='nc'&gt;.sidebar&lt;/span&gt; &lt;span class='nc'&gt;.primarynav&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
    &lt;span class='o'&gt;...&lt;/span&gt;
  &lt;span class='p'&gt;}&lt;/span&gt;
  &lt;span class='nc'&gt;.sidebar&lt;/span&gt; &lt;span class='nc'&gt;.secondarynav&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
    &lt;span class='o'&gt;...&lt;/span&gt;
  &lt;span class='p'&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;サイドバーというのは、色々なモジュールが入る可能性がある、「大きなもの」です。上のコードは、OOCSS的に言えば、そのサイドバーを「大きなモジュール」として捉えてしまっている書き方であると考えることができます。実際、上のコードでは&lt;code&gt;...&lt;/code&gt;で済ませていますが、その中には&lt;code&gt;span&lt;/code&gt;なり&lt;code&gt;li&lt;/code&gt;なり別の要素がボンボン入り、ネストは深く深くなっていくはずです。そうなれば、サイドバーという大きなモジュールに対応するCSSは、どんどん長く、深くなっていってしまいます。&lt;/p&gt;

&lt;p&gt;これは、「粒度が大きすぎる」状態です。もっと細かく、再利用可能な適切な単位のHTML+CSSの塊を「モジュール」として考えましょう。そうすれば、メンテナンス性もアップでしょ？この例だったら、例えば以下のように細かく、一つずつを小さな「モジュール」として捉えるのです。&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='css'&gt;&lt;span class='nc'&gt;.sidebar&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
  &lt;span class='o'&gt;...&lt;/span&gt;
&lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='nc'&gt;.sidebarHeading&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
  &lt;span class='o'&gt;...&lt;/span&gt;
&lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='nc'&gt;.sidebarList&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
  &lt;span class='o'&gt;...&lt;/span&gt;
&lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='nc'&gt;.sidebarBanners&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
  &lt;span class='o'&gt;...&lt;/span&gt;
&lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='nc'&gt;.sidebarPrimarynav&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
  &lt;span class='o'&gt;...&lt;/span&gt;
&lt;span class='p'&gt;}&lt;/span&gt;
&lt;span class='nc'&gt;.sidebarSecondarynav&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
  &lt;span class='o'&gt;...&lt;/span&gt;
&lt;span class='p'&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;そうすれば、一つのモジュールが複雑になった時でも、見ればいいのはそのモジュールの部分だけですので、後からの変更も比較的容易です。ページを構成するUIを、適切な大きさの、小さなモジュールの集まりと考えることで、コードを整理するのです。&lt;/p&gt;

&lt;p&gt;ついでに言うと、弊社&lt;a href='http://www.pxgrid.com/'&gt;ピクセルグリッド&lt;/a&gt;では、コーディングする際、そのようなモジュール一覧を作ってから具体的なページを起こすようにしていますよ。例えば&lt;a href='http://cdn.dropmark.com/2008/08dc7cea3fdde7aea49c8ffc17e82b8c6d06da63/modules1.png'&gt;こんなふう&lt;/a&gt;に。そして、モジュールの一番外側の要素には、クラス名として&lt;code&gt;mod-モジュール名&lt;/code&gt;をつけているんです。そうすれば、クラス名が被るっていうこともかなり少なくなるでしょう？ついでに&lt;a href='http://www.codegrid.net/'&gt;CodeGrid&lt;/a&gt;というサービスで記事を書いていたりもするので気になる方はチェックしてみてね&amp;#8230;！&lt;/p&gt;

&lt;p&gt;&amp;#8230;と話がそれました。&lt;br /&gt;そんな風に、モジュールで考えるのがOOCSSの基本的な考え方なのです。そのために、ある程度セマンティックでないクラス名は致し方なし。だって「The world is not always perfect」だからです。ある程度の抽象さをもったクラス名を使うという感じですね。繰り返しになりますが、&lt;code&gt;borderred&lt;/code&gt;とかいうクラス名を付けることがOOCSSじゃないんですよ。&lt;/p&gt;

&lt;p&gt;ページを構成するUIを、モジュール単位で整理して考えることが重要なんです。&lt;/p&gt;

&lt;h2 id='mixin__include'&gt;mixin + include&lt;/h2&gt;

&lt;p&gt;そんなこんなで、要素のclass属性を利用し、モジュールモジュールした組み方がOOCSSなのですが、Sassを使えば、そんなことをしなくても、セマンティック野郎の野望を実現します。それも、CSSの管理性も確保した上で&amp;#8230;！そんな素敵なSassでこのボタンを書いた例がこれです。&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='http://cdn.dropmark.com/2008/29804bd5211aa79748eaf5f849a5a114c199b1d8/Picture%205.png' /&gt;&lt;/p&gt;

&lt;p&gt;HTMLには&lt;code&gt;twitterbtn&lt;/code&gt;、&lt;code&gt;facebookbtn&lt;/code&gt;という、コンテンツそのものを表現するようなクラス名を、そして、Sassファイルの中では、これらのクラスセレクタに対し、ベースとなる、今OOCSSで&lt;code&gt;.btnbase&lt;/code&gt;として定義してたスタイル - これを&lt;code&gt;mixin&lt;/code&gt;として定義しておき、これをまるっと&lt;code&gt;include&lt;/code&gt;します。&lt;/p&gt;

&lt;p&gt;こうすれば、先ほど問題になっていた問題が解決されているのが分かるでしょうか？ クラス名はセマンティックで、CSSの管理性も確保されているのです&amp;#8230;！ドヤーーというのがSassの素晴らしいところです。&lt;/p&gt;

&lt;h2 id='extend'&gt;extend&lt;/h2&gt;

&lt;p&gt;ですが、実は、このようにOOCSS的なことをSassでやるのには、&lt;code&gt;extend&lt;/code&gt;の方が優れています。&lt;code&gt;extend&lt;/code&gt;を使うと、以下の様なコードになります。&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='http://cdn.dropmark.com/2008/77abda73288a4561c0fde5e086a9c0f4a25b10f7/Picture%206.png' /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.btnbase&lt;/code&gt;に当てられたスタイル群をもってきますよーという感じです。&lt;/p&gt;

&lt;p&gt;なぜ&lt;code&gt;extend&lt;/code&gt;のほうがいいかというのは、出力結果のCSSを見てみるとわかります。左が、先の&lt;code&gt;mixin&lt;/code&gt;の例が出力したCSS、右が今回の&lt;code&gt;extend&lt;/code&gt;の例が出力したCSSです。&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='http://cdn.dropmark.com/2008/3da06708835cba80f1759f7ad658b3cb07148d5a/Picture%207.png' /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mixin&lt;/code&gt;を&lt;code&gt;include&lt;/code&gt;した場合は、同じコードが2箇所に出力されてしまいます。それに対し、&lt;code&gt;extend&lt;/code&gt;の場合は、同じスタイルらを、セレクタをまとめて出力してくれるのです。&lt;/p&gt;

&lt;p&gt;HTML+CSSではできないことを平然とやってのけた&amp;#8230;！痺れるし憧れますね。個人的には、これこそがSassのもたらす最大のメリットだなーと感じます。&lt;code&gt;extend&lt;/code&gt;は、そんな風に素晴らしい構造性をCSSにもたらしてくれます。&lt;/p&gt;

&lt;p&gt;このような書き方を、OOSassと呼ぶ人もいるようです。&lt;/p&gt;

&lt;h2 id='placeholder_selector'&gt;placeholder selector&lt;/h2&gt;

&lt;p&gt;ついでに言っておくと、Sass3.2からは、&lt;code&gt;placeholder selector&lt;/code&gt;というものが追加されました。これを使うと、今出した&lt;code&gt;extend&lt;/code&gt;の例が出力する&lt;code&gt;.btnbase&lt;/code&gt;というモジュールのベースとなる、抽象的なクラスを、出力させないようにすることができます。&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='http://cdn.dropmark.com/2008/9eeb09a81c43f0e04926590396b28560c59c2b7e/Picture%208.png' /&gt;&lt;/p&gt;

&lt;p&gt;これの出力結果が、以下の右。左は、先のように、普通に&lt;code&gt;.btnbase&lt;/code&gt;で&lt;code&gt;extend&lt;/code&gt;した場合の出力です。&lt;code&gt;.btnbase&lt;/code&gt;で&lt;code&gt;extend&lt;/code&gt;した時と比べると、&lt;code&gt;%btnbase&lt;/code&gt;で&lt;code&gt;extend&lt;/code&gt;した方には、赤文字で書かれたクラスセレクタが存在していないことがわかります。&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='http://cdn.dropmark.com/2008/efdd48766c34b140183a8e388d30459687ba6c64/Picture%209.png' /&gt;&lt;/p&gt;

&lt;p&gt;我々は、Sassを利用することで、他のプログラミング言語に用意されている、「抽象クラス」のようなことを、実現できることとなります。おお、ブラボー・・・&lt;/p&gt;

&lt;h2 id='sassextend'&gt;Sassのextendが素敵まとめ&lt;/h2&gt;

&lt;p&gt;そんなSassの&lt;code&gt;extend&lt;/code&gt;が素晴らしすぎるよねということを図にまとめると、以下のようになります。&lt;/p&gt;

&lt;p&gt;&lt;img alt='' src='http://cdn.dropmark.com/2008/35da381d8cad4caec755596c54a466810d602cba/extending.png' /&gt;&lt;/p&gt;

&lt;p&gt;OOCSSでは、CSSでベースとなるモジュールを作り、スキンを作り、そのスキン適用を、HTMLのclass属性上出やるしかありませんでした。しかし、Sassを使えば、それは全てSCSSファイルの中で完結します。モジュールにスキン適用&amp;#8230;ここまでを全てSass任せにできるのです。&lt;/p&gt;

&lt;p&gt;これで、はじめに出たセマンティックな人も柔軟性重視な人もニッコリというわけですね。いやーSassって素晴らしいなー。&lt;/p&gt;

&lt;h2 id='oocss'&gt;でもやっぱOOCSSか？&lt;/h2&gt;

&lt;p&gt;なー、Sassって素晴らしいなー&amp;#8230; 完全無欠だなー&amp;#8230; と思ってたんですよ。以下の記事を読むまでは。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://oliverash.me/2012/09/07/methods-for-modifying-objects-in-oocss.html'&gt;Methods for Modifying Objects in OOCSS (Extends: A Fool’s Gold) – Oliver Joseph Ash&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この記事が言っているのは、「OOCSS的なことをSassでやるのは確かに素晴らしいさ。でも、そんな風に&lt;code&gt;extend&lt;/code&gt;しまくると、出力結果のCSSで、超大量のセレクタが並ぶことになり、結果的にCSSの容量がふえまくっちゃうことになるんだよ？」ということです。&lt;/p&gt;

&lt;p&gt;これは、先程の&lt;code&gt;extend&lt;/code&gt;の結果に並ぶ、&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='css'&gt;&lt;span class='nc'&gt;.btnbase&lt;/span&gt;&lt;span class='o'&gt;,&lt;/span&gt; &lt;span class='nc'&gt;.twitterbtn&lt;/span&gt;&lt;span class='o'&gt;,&lt;/span&gt; &lt;span class='nc'&gt;.facebookbtn&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
  &lt;span class='o'&gt;...&lt;/span&gt;
&lt;span class='p'&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;の部分ことを言っています。この例ですと、具体的なボタンのスキンは2つだけだからまだ良いです。しかし、この「具体的なボタン」というものが、100個ぐらいあったらどうでしょう。100このクラスセレクタがここに並ぶことになるんですよ。さらに、この例だと単純だからいいものの、実際には中にspanだの別の要素が並ぶことになります。そうなると、もう大量のセレクタがCSSに書きだされてしまう&amp;#8230;！ということになってしまうんですよね。&lt;/p&gt;

&lt;p&gt;これは確かに盲点です。それだったらHTMLのclass属性でOOCSSした方がいいかもしれません。しかしそうするとHTMLにスタイル指定の一部を担わせることになり&amp;#8230; と、悩みはつきません。&lt;/p&gt;

&lt;h2 id='id309'&gt;まとめ&lt;/h2&gt;

&lt;p&gt;HTMLもCSSも完璧なものではありません。その完璧じゃない部分を、Sass等のCSSプリプロセッサは、大いに補強してくれるものですが、それで万事OKだというわけではない事も念頭に入れておく必要があるでしょう。&lt;/p&gt;

&lt;p&gt;複雑な&lt;code&gt;extend&lt;/code&gt;が容量の大きいCSSを作ってしまう&amp;#8230; これは確かに問題ではありますが、かなりモジュールの数が増え、複雑になりすぎてしまった時にしか問題にならなそうではあります。&lt;/p&gt;

&lt;p&gt;結局のところ、CSSプリプロセッサを使ったところで、「CSS is too fragile」の根本的な問題が解決されたわけではありません。その部分を解決するのは、やはりモジュール感を意識した無駄のない設計と言えるのではないでしょうか。&lt;/p&gt;

&lt;p&gt;あなたはどのようにCSSを書いていますか？ この記事を読むことで、少しでもCSSの設計に対する思慮が深まっていただけたら幸いです。&lt;/p&gt;

&lt;p&gt;&lt;a href='http://www.adventar.org/calendars/1'&gt;CSS Preprocessor Advent Calendar 2012&lt;/a&gt;、次はコバさんです。&lt;/p&gt;

&lt;p&gt;お読みいただき、ありがとうございました。&lt;/p&gt;</content>
  </entry>
  
  <entry>
		<id>http://takazudo.github.com/blog/entry/2012-12-03-imgloader.html</id>
    <link type="text/html" rel="alternate" href="http://takazudo.github.com/blog/entry/2012-12-03-imgloader.html"/>
    <title>jQuery.ImgLoader has XHR2 feature now</title>
    <updated>2012-12-03T00:00:00+09:00</updated>
    <author>
			<name>"Takazudo" Takeshi Takatsudo</name>
      <uri>http://takazudo.github.com/blog</uri>
    </author>
    <content type="html">&lt;p&gt;I just updated my library &lt;a href='https://github.com/Takazudo/jQuery.ImgLoader'&gt;jQuery.ImgLoader&lt;/a&gt;.&lt;br /&gt;It preloads imgs using XHR2, so now you can bind &lt;code&gt;progress&lt;/code&gt; event to the loader.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;Here&amp;#8217;s the demo.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='/jQuery.ImgLoader/demo2/example.html'&gt;demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It&amp;#8217;s easy to use &lt;code&gt;progress&lt;/code&gt; event.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='javascript'&gt;&lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;loader&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='nx'&gt;$&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;ImgLoader&lt;/span&gt;&lt;span class='p'&gt;({&lt;/span&gt;
  &lt;span class='nx'&gt;srcs&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;[&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;img1.jpg&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;img2.jpg&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;img3.jpg&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;img4.jpg&amp;#39;&lt;/span&gt; &lt;span class='p'&gt;]&lt;/span&gt;
&lt;span class='p'&gt;});&lt;/span&gt;
&lt;span class='nx'&gt;loader&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;on&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;progress&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;progressInfo&lt;/span&gt;&lt;span class='p'&gt;){&lt;/span&gt;
  &lt;span class='nx'&gt;console&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;log&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;progressInfo&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;loadedRatio&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt; &lt;span class='c1'&gt;// 0.45 woot!&lt;/span&gt;
&lt;span class='p'&gt;});&lt;/span&gt;
&lt;span class='nx'&gt;loader&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;on&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;itemload&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;$img&lt;/span&gt;&lt;span class='p'&gt;){&lt;/span&gt;
  &lt;span class='nx'&gt;$&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;#somewhere&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;).&lt;/span&gt;&lt;span class='nx'&gt;append&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;$img&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
&lt;span class='p'&gt;});&lt;/span&gt;
&lt;span class='nx'&gt;loader&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;on&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;allload&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;$img&lt;/span&gt;&lt;span class='p'&gt;){&lt;/span&gt;
  &lt;span class='nx'&gt;alert&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;everything loaded!&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
&lt;span class='p'&gt;});&lt;/span&gt;
&lt;span class='nx'&gt;loader&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;load&lt;/span&gt;&lt;span class='p'&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;In the lib, it send XHR2 request before it creates img tag if the browser can use XHR2.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='https://github.com/Takazudo/jQuery.ImgLoader'&gt;jQuery.ImgLoader&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  
  <entry>
		<id>http://takazudo.github.com/blog/entry/2012-07-20-grunt-loadnpmtasks.html</id>
    <link type="text/html" rel="alternate" href="http://takazudo.github.com/blog/entry/2012-07-20-grunt-loadnpmtasks.html"/>
    <title>grunt loadNpmTasks</title>
    <updated>2012-07-20T00:00:00+09:00</updated>
    <author>
			<name>"Takazudo" Takeshi Takatsudo</name>
      <uri>http://takazudo.github.com/blog</uri>
    </author>
    <content type="html">&lt;p&gt;Basically, with grunt, you need to code your own tasks.&lt;br /&gt;But you can also use tasks on npm. Here&amp;#8217;s howto.&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2 id='growl'&gt;growl&lt;/h2&gt;

&lt;p&gt;Easy growling using &lt;a href='https://github.com/alextucker/grunt-growl'&gt;grunt-growl&lt;/a&gt;.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='javascript'&gt;&lt;span class='nx'&gt;module&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;exports&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;){&lt;/span&gt;
  
  &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;loadNpmTasks&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;grunt-growl&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;

  &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;initConfig&lt;/span&gt;&lt;span class='p'&gt;({&lt;/span&gt;
    &lt;span class='nx'&gt;growl&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
      &lt;span class='nx'&gt;test1&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='nx'&gt;message&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;OMG!!!&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
        &lt;span class='nx'&gt;title&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;WOOOOT!!&amp;#39;&lt;/span&gt;
      &lt;span class='p'&gt;}&lt;/span&gt;
    &lt;span class='p'&gt;}&lt;/span&gt;
  &lt;span class='p'&gt;});&lt;/span&gt;

  &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;registerTask&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;growl&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;

&lt;span class='p'&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id='coffeescript'&gt;CoffeeScript&lt;/h2&gt;

&lt;p&gt;Easy CoffeeScript compiling using &lt;a href='https://github.com/avalade/grunt-coffee'&gt;grunt-coffee&lt;/a&gt;.&lt;br /&gt;I want to be notified when the compiling successed, too.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='javascript'&gt;&lt;span class='nx'&gt;module&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;exports&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;){&lt;/span&gt;
  
  &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;loadNpmTasks&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;grunt-growl&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
  &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;loadNpmTasks&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;grunt-coffee&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;

  &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;initConfig&lt;/span&gt;&lt;span class='p'&gt;({&lt;/span&gt;
    &lt;span class='nx'&gt;growl&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
      &lt;span class='nx'&gt;done&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='nx'&gt;title&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;grunt&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
        &lt;span class='nx'&gt;message&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;SUCCESSED!!&amp;#39;&lt;/span&gt;
      &lt;span class='p'&gt;}&lt;/span&gt;
    &lt;span class='p'&gt;},&lt;/span&gt;
    &lt;span class='nx'&gt;coffee&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
      &lt;span class='nx'&gt;app&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='nx'&gt;src&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;[&lt;/span&gt;
          &lt;span class='s1'&gt;&amp;#39;coffee/1.coffee&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
          &lt;span class='s1'&gt;&amp;#39;coffee/2.coffee&amp;#39;&lt;/span&gt;
        &lt;span class='p'&gt;],&lt;/span&gt;
        &lt;span class='nx'&gt;dest&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;js&amp;#39;&lt;/span&gt;
      &lt;span class='p'&gt;}&lt;/span&gt;
    &lt;span class='p'&gt;},&lt;/span&gt;
    &lt;span class='nx'&gt;watch&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
      &lt;span class='nx'&gt;app&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='nx'&gt;files&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;&amp;lt;config:coffee.app.src&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
        &lt;span class='nx'&gt;tasks&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;coffee:app growl&amp;#39;&lt;/span&gt;
      &lt;span class='p'&gt;}&lt;/span&gt;
    &lt;span class='p'&gt;}&lt;/span&gt;
  &lt;span class='p'&gt;});&lt;/span&gt;

  &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;registerTask&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;coffee growl&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;

&lt;span class='p'&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id='sass'&gt;Sass&lt;/h2&gt;

&lt;p&gt;Sass compiling using &lt;a href='https://github.com/sindresorhus/grunt-sass'&gt;grunt-sass&lt;/a&gt;.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='javascript'&gt;&lt;span class='nx'&gt;module&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;exports&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;){&lt;/span&gt;
  
  &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;loadNpmTasks&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;grunt-growl&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
  &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;loadNpmTasks&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;grunt-sass&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;

  &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;initConfig&lt;/span&gt;&lt;span class='p'&gt;({&lt;/span&gt;
    &lt;span class='nx'&gt;growl&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
      &lt;span class='nx'&gt;done&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='nx'&gt;title&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;grunt&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
        &lt;span class='nx'&gt;message&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;SUCCESSED!!&amp;#39;&lt;/span&gt;
      &lt;span class='p'&gt;}&lt;/span&gt;
    &lt;span class='p'&gt;},&lt;/span&gt;
    &lt;span class='nx'&gt;sass&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
      &lt;span class='nx'&gt;app&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='nx'&gt;src&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;scss/style.scss&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
        &lt;span class='nx'&gt;dest&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;css/style.css&amp;#39;&lt;/span&gt;
      &lt;span class='p'&gt;}&lt;/span&gt;
    &lt;span class='p'&gt;},&lt;/span&gt;
    &lt;span class='nx'&gt;watch&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
      &lt;span class='nx'&gt;app&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='nx'&gt;files&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;scss/*&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
        &lt;span class='nx'&gt;tasks&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;sass:app growl:done&amp;#39;&lt;/span&gt;
      &lt;span class='p'&gt;}&lt;/span&gt;
    &lt;span class='p'&gt;}&lt;/span&gt;
  &lt;span class='p'&gt;});&lt;/span&gt;

  &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;registerTask&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;sass growl:done&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;

&lt;span class='p'&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id='compass'&gt;Compass&lt;/h2&gt;

&lt;p&gt;Compiling compass scss files using &lt;a href='https://github.com/kahlil/grunt-compass'&gt;grunt-compass&lt;/a&gt;.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='javascript'&gt;&lt;span class='nx'&gt;module&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;exports&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;){&lt;/span&gt;
  
  &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;loadNpmTasks&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;grunt-growl&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
  &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;loadNpmTasks&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;grunt-compass&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;

  &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;initConfig&lt;/span&gt;&lt;span class='p'&gt;({&lt;/span&gt;
    &lt;span class='nx'&gt;growl&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
      &lt;span class='nx'&gt;done&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='nx'&gt;title&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;grunt&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
        &lt;span class='nx'&gt;message&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;SUCCESSED!!&amp;#39;&lt;/span&gt;
      &lt;span class='p'&gt;}&lt;/span&gt;
    &lt;span class='p'&gt;},&lt;/span&gt;
    &lt;span class='nx'&gt;compass&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
      &lt;span class='nx'&gt;app&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='nx'&gt;src&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;scss/&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
        &lt;span class='nx'&gt;dest&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;css/&amp;#39;&lt;/span&gt;
      &lt;span class='p'&gt;}&lt;/span&gt;
    &lt;span class='p'&gt;},&lt;/span&gt;
    &lt;span class='nx'&gt;watch&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
      &lt;span class='nx'&gt;app&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='nx'&gt;files&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;scss/*&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
        &lt;span class='nx'&gt;tasks&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;compass:app growl:done&amp;#39;&lt;/span&gt;
      &lt;span class='p'&gt;}&lt;/span&gt;
    &lt;span class='p'&gt;}&lt;/span&gt;
  &lt;span class='p'&gt;});&lt;/span&gt;

  &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;registerTask&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;compass growl:done&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;

&lt;span class='p'&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id='notice'&gt;Notice&lt;/h2&gt;

&lt;p&gt;Before using there npm tasks, you need to do &lt;code&gt;npm install grunt-coffee&lt;/code&gt; in the directory which &lt;code&gt;grunt.js&lt;/code&gt; exists.&lt;/p&gt;

&lt;p&gt;Npm tasks are mostly well coded. But you need to know that they are not always perfect. Report bugs or send pull request to authors if they didn&amp;#8217;t work. Or you need to code tasks by yourself.&lt;/p&gt;

&lt;p&gt;You can check my grunt examples on &lt;a href='https://github.com/Takazudo/gruntExamples'&gt;Takazudo/gruntExamples&lt;/a&gt;.&lt;br /&gt;All examples here are in this repository too.&lt;/p&gt;</content>
  </entry>
  
  <entry>
		<id>http://takazudo.github.com/blog/entry/2012-04-14-grunt-coffee.html</id>
    <link type="text/html" rel="alternate" href="http://takazudo.github.com/blog/entry/2012-04-14-grunt-coffee.html"/>
    <title>Compiling CoffeeScript with grunt</title>
    <updated>2012-04-14T00:00:00+09:00</updated>
    <author>
			<name>"Takazudo" Takeshi Takatsudo</name>
      <uri>http://takazudo.github.com/blog</uri>
    </author>
    <content type="html">&lt;p&gt;&lt;a href='http://coffeescript.org/'&gt;CoffeeScript&lt;/a&gt; is sweat.&lt;br /&gt;It provides easy watch and has no problem about compiling without any other tools. But in concrete projects, we sometimes need more complicated compiling strategy. &lt;a href='https://github.com/cowboy/grunt'&gt;Grunt&lt;/a&gt; provides nice APIs for automated builds for sass, less, stylus, CoffeeScript or something like that. In this article, I&amp;#8217;ll introduce my grunt file for CoffeeScript.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;Note: This article is for grunt version 0.3.8. APIs may be changed in the future.&lt;/p&gt;

&lt;h2 id='installing_grunt'&gt;Installing grunt&lt;/h2&gt;

&lt;p&gt;To use grunt, install node and npm. Grunt needs to be installed as global with &lt;code&gt;-g&lt;/code&gt;.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;&lt;span class='nv'&gt;$ &lt;/span&gt;npm install -g grunt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;I skip grunt&amp;#8217;s basics here. You can see some examples on &lt;a href='https://github.com/cowboy/grunt'&gt;grunt&lt;/a&gt;&amp;#8217;s repository. Or check &lt;a href='https://github.com/Takazudo/gruntExamples'&gt;my repository&lt;/a&gt; for grunt examples. Basically, create &lt;code&gt;grunt.js&lt;/code&gt; to your directory. Then write build codes there. Then you can run the builds with the command like below.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;&lt;span class='nv'&gt;$ &lt;/span&gt;grunt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;&lt;span class='nv'&gt;$ &lt;/span&gt;grunt watch
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;If you have not used grunt yet. Just try to work something with grunt. It has standard features for JavaScript development. ex: jslint, concat, minify, test.&lt;/p&gt;

&lt;h2 id='how_to_compile_coffeescript_files_on_command_line'&gt;How to compile CoffeeScript files on command line&lt;/h2&gt;

&lt;p&gt;It&amp;#8217;s listed on &lt;a href='http://coffeescript.org/'&gt;CoffeeScript&amp;#8217; website&lt;/a&gt;. Here&amp;#8217;s what I want to use.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;&lt;span class='nv'&gt;$ &lt;/span&gt;coffee --compile --output .js/ .coffee/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;With this, coffee compiles all &lt;code&gt;*.coffee&lt;/code&gt; files in &lt;code&gt;coffee&lt;/code&gt; directory. The compiled JavaScript files will be put into &lt;code&gt;js&lt;/code&gt; directory.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;&lt;span class='nv'&gt;$ &lt;/span&gt;coffee --join compiled.js --compile 1.coffee 2.coffee
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;With this, coffee concatenate &lt;code&gt;1.coffee&lt;/code&gt; and &lt;code&gt;2.coffee&lt;/code&gt; first. Then it compiles concanated sources to &lt;code&gt;compiled.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;CoffeeScript has also &lt;code&gt;--watch&lt;/code&gt; option. But it&amp;#8217;s better to automate these with build utilities. Rake, Make or something like that also seem good. But if you are familiar to JavaScript, grunt is better for you, I guess.&lt;/p&gt;

&lt;h2 id='helper_utility_tasks'&gt;Helper, utility tasks&lt;/h2&gt;

&lt;p&gt;Grunt doesn&amp;#8217;t have the feature to compile CoffeeScript as default. So you need to write your own task for coffee compiling. First, let&amp;#8217;s prepare helper functions / tasks for it. Here&amp;#8217;s what I wrote.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='javascript'&gt;&lt;span class='cm'&gt;/* grunt common utilities */&lt;/span&gt;

&lt;span class='nx'&gt;module&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;exports&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;){&lt;/span&gt;
  
  &lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;exec&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='nx'&gt;require&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;child_process&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;).&lt;/span&gt;&lt;span class='nx'&gt;exec&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;

  &lt;span class='c1'&gt;// child_process.exec bridge&lt;/span&gt;
  &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;registerHelper&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;exec&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;opts&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;done&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
    &lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;command&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='nx'&gt;opts&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;cmd&lt;/span&gt; &lt;span class='o'&gt;+&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39; &amp;#39;&lt;/span&gt; &lt;span class='o'&gt;+&lt;/span&gt; &lt;span class='nx'&gt;opts&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;args&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;join&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
    &lt;span class='nx'&gt;exec&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;command&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;opts&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;opts&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;code&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;stdout&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;stderr&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
      &lt;span class='k'&gt;if&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='o'&gt;!&lt;/span&gt;&lt;span class='nx'&gt;done&lt;/span&gt;&lt;span class='p'&gt;){&lt;/span&gt;
        &lt;span class='k'&gt;return&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
      &lt;span class='p'&gt;}&lt;/span&gt;
      &lt;span class='k'&gt;if&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;code&lt;/span&gt; &lt;span class='o'&gt;===&lt;/span&gt; &lt;span class='mi'&gt;0&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='nx'&gt;done&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='kc'&gt;null&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;stdout&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;code&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
      &lt;span class='p'&gt;}&lt;/span&gt; &lt;span class='k'&gt;else&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='nx'&gt;done&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;code&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;stderr&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;code&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
      &lt;span class='p'&gt;}&lt;/span&gt;
    &lt;span class='p'&gt;});&lt;/span&gt;
  &lt;span class='p'&gt;});&lt;/span&gt;

  &lt;span class='c1'&gt;// growl: Ex. grunt.helper(&amp;#39;growl&amp;#39;, &amp;#39;foo&amp;#39;, &amp;#39;bar&amp;#39;);&lt;/span&gt;
  &lt;span class='c1'&gt;// http://growl.info/extras.php#growlnotify&lt;/span&gt;
  &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;registerHelper&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;growl&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;title&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;msg&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
    &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;helper&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;exec&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
      &lt;span class='nx'&gt;cmd&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;growlnotify&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
      &lt;span class='nx'&gt;args&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;[&lt;/span&gt;
        &lt;span class='s1'&gt;&amp;#39;-t&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class='o'&gt;+&lt;/span&gt; &lt;span class='nx'&gt;title&lt;/span&gt; &lt;span class='o'&gt;+&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
        &lt;span class='s1'&gt;&amp;#39;-m&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class='o'&gt;+&lt;/span&gt; &lt;span class='nx'&gt;msg&lt;/span&gt; &lt;span class='o'&gt;+&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;
      &lt;span class='p'&gt;]&lt;/span&gt;
    &lt;span class='p'&gt;});&lt;/span&gt;
  &lt;span class='p'&gt;});&lt;/span&gt;

  &lt;span class='c1'&gt;// ok: use this for notify everything are allright.&lt;/span&gt;
  &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;registerTask&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;ok&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;done!&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;(){&lt;/span&gt;
    &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;helper&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;growl&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;grunt.js&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;＼(^o^)／&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
  &lt;span class='p'&gt;});&lt;/span&gt;

&lt;span class='p'&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;In the code above, first, I created &lt;code&gt;child_process.exec&lt;/code&gt; wrapper. With this helper, you can pass the commands to &lt;code&gt;child_process.exec&lt;/code&gt; easily. I&amp;#8217;ll call this &amp;#8220;exec&amp;#8221; helper.&lt;/p&gt;

&lt;p&gt;Next, I created &amp;#8220;growl&amp;#8221; helper. &lt;a href='http://growl.info/extras.php#growlnotify'&gt;Growl&lt;/a&gt; is a great application for Mac (though if you use Mac, you may already know. And sorry for non-Mac users.). This notifies you something. I&amp;#8217;ll use this to notify whether CoffeeScript&amp;#8217;s compiling was successed or not. Install growlnotify extension if you&amp;#8217;ve not installed it yet. You can see how I used &amp;#8220;exec&amp;#8221; helper here.&lt;/p&gt;

&lt;p&gt;The last part of the code above is &amp;#8220;ok&amp;#8221; task. I&amp;#8217;ll call this task when everythings was done without error. You can see how I used &amp;#8220;growl&amp;#8221; helper here.&lt;/p&gt;

&lt;p&gt;&amp;#8220;Helper&amp;#8221; is like a function shared in &amp;#8220;grunt&amp;#8221; namespace. I&amp;#8217;ll use &amp;#8220;exec&amp;#8221; helper more next.&lt;/p&gt;

&lt;h2 id='coffeescript_compiling_tasks'&gt;CoffeeScript compiling tasks&lt;/h2&gt;

&lt;p&gt;So let&amp;#8217;s compile CoffeeScripts with this.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='javascript'&gt;&lt;span class='cm'&gt;/**&lt;/span&gt;
&lt;span class='cm'&gt; * coffee compiling tasks&lt;/span&gt;
&lt;span class='cm'&gt; * CoffeeScript: http://coffeescript.org/&lt;/span&gt;
&lt;span class='cm'&gt; */&lt;/span&gt;
&lt;span class='nx'&gt;module&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;exports&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;){&lt;/span&gt;
  
  &lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;log&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;log&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;

  &lt;span class='kd'&gt;function&lt;/span&gt; &lt;span class='nx'&gt;handleResult&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;from&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;dest&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;err&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;stdout&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;code&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;done&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
    &lt;span class='k'&gt;if&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;err&lt;/span&gt;&lt;span class='p'&gt;){&lt;/span&gt;
      &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;helper&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;growl&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;COFFEE COMPILING GOT ERROR&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;stdout&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
      &lt;span class='nx'&gt;log&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;writeln&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;from&lt;/span&gt; &lt;span class='o'&gt;+&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;: failed to compile to &amp;#39;&lt;/span&gt; &lt;span class='o'&gt;+&lt;/span&gt; &lt;span class='nx'&gt;dest&lt;/span&gt; &lt;span class='o'&gt;+&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
      &lt;span class='nx'&gt;log&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;writeln&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;stdout&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
      &lt;span class='nx'&gt;done&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='kc'&gt;false&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
    &lt;span class='p'&gt;}&lt;/span&gt;&lt;span class='k'&gt;else&lt;/span&gt;&lt;span class='p'&gt;{&lt;/span&gt;
      &lt;span class='nx'&gt;log&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;writeln&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;from&lt;/span&gt; &lt;span class='o'&gt;+&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;: compiled to &amp;#39;&lt;/span&gt; &lt;span class='o'&gt;+&lt;/span&gt; &lt;span class='nx'&gt;dest&lt;/span&gt; &lt;span class='o'&gt;+&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
      &lt;span class='nx'&gt;done&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='kc'&gt;true&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
    &lt;span class='p'&gt;}&lt;/span&gt;
  &lt;span class='p'&gt;}&lt;/span&gt;

  &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;registerHelper&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;coffee_dir_to_dir&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;fromdir&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;dest&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;done&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
    &lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;args&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
      &lt;span class='nx'&gt;cmd&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;coffee&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
      &lt;span class='nx'&gt;args&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;[&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;--compile&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;--output&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;dest&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;fromdir&lt;/span&gt; &lt;span class='p'&gt;]&lt;/span&gt;
    &lt;span class='p'&gt;};&lt;/span&gt;
    &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;helper&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;exec&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;args&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;err&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;stdout&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;code&lt;/span&gt;&lt;span class='p'&gt;){&lt;/span&gt;
      &lt;span class='nx'&gt;handleResult&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;fromdir&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;dest&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;err&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;stdout&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;code&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;done&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
    &lt;span class='p'&gt;});&lt;/span&gt;
  &lt;span class='p'&gt;});&lt;/span&gt;

  &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;registerHelper&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;coffee_multi_to_one&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;srcs&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;dest&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;done&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
    &lt;span class='nx'&gt;srcs&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='nx'&gt;srcs&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;join&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
    &lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;args&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
      &lt;span class='nx'&gt;cmd&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;coffee&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
      &lt;span class='nx'&gt;args&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;[&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;--join&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;dest&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;--compile&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;srcs&lt;/span&gt; &lt;span class='p'&gt;]&lt;/span&gt;
    &lt;span class='p'&gt;};&lt;/span&gt;
    &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;helper&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;exec&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;args&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;err&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;stdout&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;code&lt;/span&gt;&lt;span class='p'&gt;){&lt;/span&gt;
      &lt;span class='nx'&gt;handleResult&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;srcs&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;dest&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;err&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;stdout&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;code&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;done&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
    &lt;span class='p'&gt;});&lt;/span&gt;
  &lt;span class='p'&gt;});&lt;/span&gt;

  &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;registerMultiTask&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;coffee&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;compile CoffeeScripts&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;()&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;

    &lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;done&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;async&lt;/span&gt;&lt;span class='p'&gt;();&lt;/span&gt;
    &lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;files&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;data&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;files&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
    &lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;dir&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;data&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;dir&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
    &lt;span class='kd'&gt;var&lt;/span&gt; &lt;span class='nx'&gt;dest&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='k'&gt;this&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;data&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;dest&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;

    &lt;span class='c1'&gt;// ex: ./coffee -&amp;gt; ./js&lt;/span&gt;
    &lt;span class='k'&gt;if&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;dir&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
      
      &lt;span class='c1'&gt;// if destination was not defined, compile to same dir&lt;/span&gt;
      &lt;span class='k'&gt;if&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='o'&gt;!&lt;/span&gt;&lt;span class='nx'&gt;dest&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='nx'&gt;dest&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='nx'&gt;dir&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
      &lt;span class='p'&gt;}&lt;/span&gt;

      &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;helper&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;coffee_dir_to_dir&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;dir&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;dest&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;done&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
      &lt;span class='k'&gt;return&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
    &lt;span class='p'&gt;}&lt;/span&gt;

    &lt;span class='c1'&gt;// ex: [ &amp;#39;1.coffee&amp;#39;, &amp;#39;2.coffee&amp;#39; ] -&amp;gt; foo.js&lt;/span&gt;
    &lt;span class='k'&gt;if&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;files&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
      &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;helper&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;coffee_multi_to_one&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;files&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;dest&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;done&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
      &lt;span class='k'&gt;return&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
    &lt;span class='p'&gt;}&lt;/span&gt;

  &lt;span class='p'&gt;});&lt;/span&gt;

&lt;span class='p'&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;First, I created two helpers - &lt;code&gt;coffee_dir_to_dir&lt;/code&gt; and &lt;code&gt;coffee_multi_to_one&lt;/code&gt;. These are helpers which invoke coffee commands I wrote above. &amp;#8220;Directory to directory&amp;#8221; or &amp;#8220;multiple files to one&amp;#8221;. You can see how I used &amp;#8220;exec&amp;#8221; helper here ,too. The compiled results will be passed to &lt;code&gt;handleResult&lt;/code&gt;. In &lt;code&gt;handleResult&lt;/code&gt;, it shows growl if compiling got error. If not, it logs that compiling was done.&lt;/p&gt;

&lt;p&gt;The last part of the code above defines &lt;code&gt;coffee&lt;/code&gt; multiTask. In this task, grunt calls the helpers what I craeted from config values. Overall, this multiTasks is the surface of this task file. Let&amp;#8217;s see how this works with concrete &lt;code&gt;grunt.js&lt;/code&gt; file.&lt;/p&gt;

&lt;h2 id='grunt_file'&gt;Grunt file&lt;/h2&gt;

&lt;p&gt;Here&amp;#8217;s how to use the tasks above.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='javascript'&gt;&lt;span class='cm'&gt;/**&lt;/span&gt;
&lt;span class='cm'&gt; * grunt&lt;/span&gt;
&lt;span class='cm'&gt; * CoffeeScript example&lt;/span&gt;
&lt;span class='cm'&gt; *&lt;/span&gt;
&lt;span class='cm'&gt; * grunt: https://github.com/cowboy/grunt&lt;/span&gt;
&lt;span class='cm'&gt; * CoffeeScript: http://coffeescript.org/&lt;/span&gt;
&lt;span class='cm'&gt; */&lt;/span&gt;
&lt;span class='nx'&gt;module&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;exports&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;){&lt;/span&gt;

  &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;initConfig&lt;/span&gt;&lt;span class='p'&gt;({&lt;/span&gt;
    &lt;span class='nx'&gt;coffee&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
      &lt;span class='c1'&gt;// Example1: compile multiple coffees to one js with &amp;quot;--join&amp;quot;.&lt;/span&gt;
      &lt;span class='nx'&gt;dist1&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='nx'&gt;files&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;[&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;coffee/1.coffee&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;coffee/2.coffee&amp;#39;&lt;/span&gt; &lt;span class='p'&gt;],&lt;/span&gt;
        &lt;span class='nx'&gt;dest&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;js/12.js&amp;#39;&lt;/span&gt;
      &lt;span class='p'&gt;},&lt;/span&gt;
      &lt;span class='c1'&gt;// Example2: compile one coffee to one js.&lt;/span&gt;
      &lt;span class='nx'&gt;dist2&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='nx'&gt;files&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;[&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;coffee/3.coffee&amp;#39;&lt;/span&gt; &lt;span class='p'&gt;],&lt;/span&gt;
        &lt;span class='nx'&gt;dest&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;js/3.js&amp;#39;&lt;/span&gt;
      &lt;span class='p'&gt;},&lt;/span&gt;
      &lt;span class='c1'&gt;// Example3: compiled files are put in another dir.&lt;/span&gt;
      &lt;span class='nx'&gt;dist3&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='nx'&gt;dir&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;coffee/45/&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
        &lt;span class='nx'&gt;dest&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;js/&amp;#39;&lt;/span&gt;
      &lt;span class='p'&gt;},&lt;/span&gt;
      &lt;span class='c1'&gt;// Example4: compiled files are put in the same dir.&lt;/span&gt;
      &lt;span class='nx'&gt;dist4&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='nx'&gt;dir&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;insamedir/&amp;#39;&lt;/span&gt;
      &lt;span class='p'&gt;}&lt;/span&gt;
    &lt;span class='p'&gt;},&lt;/span&gt;
    &lt;span class='nx'&gt;watch&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
      &lt;span class='nx'&gt;dist1&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='nx'&gt;files&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;&amp;lt;config:coffee.dist1.files&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
        &lt;span class='nx'&gt;tasks&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;coffee:dist1 ok&amp;#39;&lt;/span&gt;
      &lt;span class='p'&gt;},&lt;/span&gt;
      &lt;span class='nx'&gt;dist2&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='nx'&gt;files&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;&amp;lt;config:coffee.dist2.files&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
        &lt;span class='nx'&gt;tasks&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;coffee:dist2 ok&amp;#39;&lt;/span&gt;
      &lt;span class='p'&gt;},&lt;/span&gt;
      &lt;span class='nx'&gt;dist3&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='nx'&gt;files&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;coffee/45/*.coffee&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
        &lt;span class='nx'&gt;tasks&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;coffee:dist3 ok&amp;#39;&lt;/span&gt;
      &lt;span class='p'&gt;},&lt;/span&gt;
      &lt;span class='nx'&gt;dist4&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='p'&gt;{&lt;/span&gt;
        &lt;span class='nx'&gt;files&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;insamedir/*.coffee&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;
        &lt;span class='nx'&gt;tasks&lt;/span&gt;&lt;span class='o'&gt;:&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;coffee:dist4 ok&amp;#39;&lt;/span&gt;
      &lt;span class='p'&gt;}&lt;/span&gt;
    &lt;span class='p'&gt;}&lt;/span&gt;
  &lt;span class='p'&gt;});&lt;/span&gt;

  &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;loadTasks&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;tasks&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
  &lt;span class='nx'&gt;grunt&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;registerTask&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;coffee ok&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;

&lt;span class='p'&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;If files were passed, grunt compiles those with &lt;code&gt;--join&lt;/code&gt;. Else if directory was passed, grunt compiles those as &amp;#8220;directory to directory&amp;#8221; compiling. With these task files, you can handle complicated compilings easily. And of course, you can minify or concat those files with other files.&lt;/p&gt;

&lt;p&gt;These are also useful for other pre processors like &lt;a href='http://sass-lang.com/'&gt;sass&lt;/a&gt;, &lt;a href='http://lesscss.org/'&gt;less&lt;/a&gt;, &lt;a href='http://learnboost.github.com/stylus/'&gt;stylus&lt;/a&gt; or something like that. I put the code I explained here on GitHub. Use these if it&amp;#8217;s useful for you.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='https://github.com/Takazudo/gruntExamples/tree/master/coffee-all-in-one'&gt;Takazudo/gruntExamples - Coffee all in one&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='https://github.com/Takazudo/gruntExamples'&gt;Takazudo/gruntExamples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  
  <entry>
		<id>http://takazudo.github.com/blog/entry/2012-04-11-firstpost.html</id>
    <link type="text/html" rel="alternate" href="http://takazudo.github.com/blog/entry/2012-04-11-firstpost.html"/>
    <title>This blog is powered by Jekyll</title>
    <updated>2012-04-11T00:00:00+09:00</updated>
    <author>
			<name>"Takazudo" Takeshi Takatsudo</name>
      <uri>http://takazudo.github.com/blog</uri>
    </author>
    <content type="html">&lt;p&gt;This is the test post! yey! Jekyll is cool!&lt;br /&gt;This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost. This is the test of this blogpost.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='javascript'&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='kd'&gt;function&lt;/span&gt;&lt;span class='p'&gt;(){&lt;/span&gt;
  &lt;span class='nb'&gt;window&lt;/span&gt;&lt;span class='p'&gt;.&lt;/span&gt;&lt;span class='nx'&gt;foobar&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;awesome!&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt;
&lt;span class='p'&gt;})(&lt;/span&gt;&lt;span class='nb'&gt;window&lt;/span&gt;&lt;span class='p'&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content>
  </entry>
  
 
</feed>
